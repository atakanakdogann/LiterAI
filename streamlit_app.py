import streamlit as st
from data_processing import process_documents
from rag_pipeline import RAGChatbot 
from vector_store_manager import VectorStoreManager # EKLENDÄ°

# --- Ayarlar ---
INDEX_PATH = "faiss_index"
DATA_PATH = "data"

@st.cache_resource
def load_rag_chatbot():
    """
    RAGChatbot sÄ±nÄ±fÄ±nÄ± yalnÄ±zca bir kez yÃ¼kler ve hafÄ±zada tutar.
    Bu, her kullanÄ±cÄ± etkileÅŸiminde modelin yeniden yÃ¼klenmesini Ã¶nler.
    """
    try:
        vsm = VectorStoreManager(index_path=INDEX_PATH)

        if not vsm.exists():
            print(f"'{INDEX_PATH}' bulunamadÄ±. Veri iÅŸleme ve veritabanÄ± oluÅŸturma sÃ¼reci baÅŸlatÄ±lÄ±yor...")
            
            chunks = process_documents(directory_path=DATA_PATH)
            
            if chunks:
                vsm.create_and_save(chunks)
            else:
                print("Ä°ÅŸlenecek dokÃ¼man bulunamadÄ±. LÃ¼tfen 'data' klasÃ¶rÃ¼nÃ¼ kontrol edin.")
                return

        vector_store = vsm.load()
        if not vector_store:
            print("VektÃ¶r veritabanÄ± yÃ¼klenemedi. Program sonlandÄ±rÄ±lÄ±yor.")
            return None
        
        chatbot = RAGChatbot(api_key=st.secrets["GOOGLE_API_KEY"], vector_store=vector_store)
        return chatbot

    except Exception as e:
        st.error(f"Chatbot baÅŸlatÄ±lÄ±rken beklenmedik bir hata oluÅŸtu: {e}")
        return None


st.set_page_config(page_title="Finansal OkuryazarlÄ±k Chatbot", page_icon="ğŸ’°")
st.title("ğŸ’° Finansal OkuryazarlÄ±k Chatbot")
st.caption("Kendi belgelerinizden beslenen RAG tabanlÄ± yapay zeka asistanÄ±")

chatbot = load_rag_chatbot()

if chatbot:
    if "messages" not in st.session_state:
        st.session_state.messages = []

    for message in st.session_state.messages:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])

    if prompt := st.chat_input("Ã–rn: Faiz nedir?"):
        st.session_state.messages.append({"role": "user", "content": prompt})
        with st.chat_message("user"):
            st.markdown(prompt)

        with st.spinner("Cevap oluÅŸturuluyor..."):
            response = chatbot.ask(prompt)
            
            st.session_state.messages.append({"role": "assistant", "content": response})
            with st.chat_message("assistant"):
                st.markdown(response)
else:
    st.warning("Chatbot yÃ¼klenemedi. LÃ¼tfen terminaldeki hata mesajlarÄ±nÄ± kontrol edin.")